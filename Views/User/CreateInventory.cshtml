@model CourseProjectitr.Models.Inventory

@{
    Layout = "_Layout";
}

<h2 class="mb-4">Create inventory</h2>

<form asp-controller="Inventory" asp-action="Create" method="post">


    @Html.AntiForgeryToken()
    <table class="table-clean table table-bordered table-striped table-hover align-middle text-start">
        <thead class="table-light">
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Category</th>
                <th>Tags</th>
                <th>Make public</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </td>
                <td>
                    <textarea asp-for="Description" class="form-control form-control-sm" rows="1" style="resize: none; overflow: hidden;"></textarea>
                </td>
                <td>
                    <select asp-for="Category" asp-items="ViewBag.Categories" class="form-select">
                        <option value="">-- Select category --</option>
                    </select>
                    <span asp-validation-for="Category" class="text-danger"></span>

                </td>
                <td>
                    <input id="tag-input" name="Tags" class="form-control" placeholder="Select tags" />
                    <input type="hidden" id="TagsJson" name="TagsJson" />

                </td>


                <td class="text-center">
                    <input asp-for="IsPublic" type="checkbox" class="form-check-input" />
                </td>
            </tr>
        </tbody>
    </table>
    <button type="submit" class="button-13">Save inventory</button>

</form>



<script>
    document.addEventListener('DOMContentLoaded', function () {
      const form = document.getElementById('inventory-create-form');
      const input = document.getElementById('tag-input');
      const hidden = document.getElementById('TagsJson');


      const tagify = new Tagify(input, {
        enforceWhitelist: false,
        delimiters: ",",
        whitelist: [
          "computer", "telephone", "tv", "monitor", "keyboard",
          "mouse", "printer", "scanner", "router", "modem"
        ],
        dropdown: { enabled: 1, maxItems: 10, classname: "tags-look", fuzzySearch: true, position: 'text', highlightFirst: true }
      });


      tagify.on('add', e => e.detail.tag.removeAttribute('title'));


      function syncHidden() {
        const tags = tagify.value.map(t => t.value);
        hidden.value = JSON.stringify(tags);
       
        console.log('TagsJson ->', hidden.value);
      }
      tagify.on('change', syncHidden);
      tagify.on('add', syncHidden);
      tagify.on('remove', syncHidden);
      syncHidden(); 

      form.addEventListener('submit', function () {
        syncHidden();
        console.log('Submitting with TagsJson:', hidden.value);
      });
    });
</script>