@model CourseProjectitr.Models.Inventory
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity

@{
    var username = Context.Session.GetString("GitHubUser") ?? User.Identity?.Name ?? "Гость";
}

<h2 class="mb-4">Инвентарь: @Model.Title</h2>
<div class="table-scroll">
<table class="table-clean table table-bordered table-striped table-hover align-middle text-start">

    <thead>
        <tr>
            <th>ID</th>
            <th>Title</th>
            <th>Description</th>
            <th>Category</th>
            <th>Owner</th>
            <th>Public</th>
            <th>Created At</th>
            <th>Tags</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@Model.NumberPrefix</td>
            <td>@Model.Title</td>
            <td class="wrap-text text-wrap">
                @Html.Raw(string.Join("\u200B", Model.Description.ToCharArray()))

            </td>

            <td>@Model.Category</td>
            <td class="wrap-text text-wrap">@Model.OwnerName</td>
            <td>@(Model.IsPublic ? "Yes" : "No")</td>
            <td>@Model.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy HH:mm")</td>
            <td class="wrap-text tag-cell">
                <div class="tag-container">
                    @foreach (var tag in Model.Tags)
                    {
                        <div class="wrap-text text-wrap">
                            <span class="tag-pill">@tag.Name</span>
                        </div>

                    }
                </div>
            </td>

        </tr>
    </tbody>
</table>
</div>
<div class="d-flex gap-2 mt-3">
    <a href="@Url.Action("Edit", "Inventory", new { ids = new[] { Model.Id } })" class="button-13">Edit</a>

    <a asp-action="Dashboard" class="button-13">Back</a>
    <button type="button" class="button-13" id="toggleAccessForm">Give access</button>
</div>

<div id="accessForm" class="access-form hidden">
    <h4>Give access to the user</h4>

    <form asp-controller="InventoryAccess" asp-action="GrantAccess" method="post">
        <input type="hidden" name="inventoryId" value="@Model.Id" />
        <input type="hidden" name="userIds" id="userIdsHidden" />

        <div class="form-group">
            <label for="userSearch">Enter name or email:</label>
            <input type="text" id="userSearch" placeholder="Enter user's name or email" />
        </div>

        <div class="form-check">
            <input type="checkbox" name="canEdit" id="canEdit" />
            <label for="canEdit">Can edit inventory</label>
        </div>

        <div class="form-check">
            <input type="checkbox" name="canComment" id="canComment" />
            <label for="canComment">Can comment</label>
        </div>

        <button type="submit">Give access</button>
    </form>
</div>

@section Scripts {
    <script>
        // Показ/скрытие формы
        document.getElementById("toggleAccessForm").addEventListener("click", function () {
            const form = document.getElementById("accessForm");
            form.style.display = form.style.display === "none" ? "block" : "none";
        });

        // Инициализация Tagify
        const input = document.getElementById('userSearch');
        const tagify = new Tagify(input, {
            whitelist: [],
            maxTags: 10,
            enforceWhitelist: true,
            dropdown: {
                enabled: 1,
                position: "auto"
            }
        });

        // Поиск пользователей
        tagify.on('input', function (e) {
            const query = e.detail.value.trim();
            const isEmail = query.includes("@@");

           fetch(`/api/users/search?query=${query}`)
                .then(res => res.json())
            .then(data => {
                if (data.length > 0) {
                    tagify.settings.whitelist = data.map(user => ({
                        value: user.email ?? user.name, 
                        id: user.id
                    }));
                    tagify.dropdown.show.call(tagify, query);
                }
                });
        });

                        tagify.on('add', function () {
            const ids = tagify.value.map(tag => tag.id);
            document.getElementById('userIdsHidden').value = JSON.stringify(ids);
        });


    </script>
}


@section Styles {
    <style>
        
    </style>
}
